{"version":3,"sources":["state-slices/authSlice.js","components/Navbar.js","state-slices/colorPickerSlice.js","components/pages/editor/ColorPicker.js","state-slices/editorToolsSlice.js","state-slices/framesSlice.js","components/pages/editor/EditorGrid.js","components/pages/editor/DrawSizeChanger.js","components/pages/editor/EditorTools.js","components/pages/editor/PreviewLoop.js","components/pages/editor/Frame.js","components/pages/editor/Frames.js","components/pages/editor/EditorPage.js","components/pages/home/NewSpriteModal.js","components/pages/home/HomePage.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["authSlice","createSlice","name","initialState","isLoggedIn","reducers","changeAuth","state","action","payload","actions","selectAuth","auth","Navbar","props","dispatch","useDispatch","useSelector","LeftMenu","className","selectedKeys","currentPage","mode","Item","to","useEffect","console","log","RightMenu","onClick","colorPickerSlice","color","r","g","b","a","changeColor","selectColor","colorPicker","ColorPicker","onChange","rgb","editorToolsSlice","tool","drawSize","changeTool","changeDrawSize","selectEditorTool","editorTools","selectDrawSize","initialId","shortId","generate","currentFrameId","frames","id","array","framesSlice","addFrame","push","removeFrame","currentIndex","findIndex","item","filter","cloneFrame","index","originalId","splice","newId","updateFrame","find","changeCurrentFrameId","updateAllFrames","selectFrames","selectCurrentFrameId","EditorGrid","mapTool","framesArray","gridArray","useRef","width","height","scale","gridWidth","current","slice","updateFrameState","tempArray","mouseGridCoords","p5","mouseX","mouseY","Math","floor","toolUse","noLoop","coords","loop","gridX","gridY","toolHelper","tempColor","mirror","different","x","ceil","y","yCalc","length","colorEqual","redraw","mirrorIndex","c1","c2","setup","canvasParentRef","noStroke","colorMode","createCanvas","parent","Array","fill","draw","erase","rect","noErase","previewShadowX","previewShadowY","mouseClicked","mouseDragged","mouseMoved","Title","Typography","DrawSizeChanger","level","min","max","defaultValue","newSize","EditorTools","useState","currentTool","setCurrentTool","e","key","size","SubMenu","PreviewLoop","frameIndex","p5Object","setP5Object","pauseTitle","setPauseTitle","incrementIndex","haltLoop","isLooping","style","frameRate","currentFrame","mousePressed","mouseReleased","newRate","formatter","value","parser","replace","Frame","frameRef","node","classList","add","remove","ref","frame","dupeFrame","Frames","onDragEnd","result","destination","source","removed","droppableId","provided","innerRef","droppableProps","map","once","overflow","draggableId","draggableProps","dragHandleProps","placeholder","Header","Layout","Footer","Sider","Content","EditorPage","history","useBeforeunload","event","preventDefault","when","message","location","marginTop","NewSpriteModal","useHistory","Form","useForm","form","layout","label","initialValue","step","type","getFieldValue","setModalOpen","HomePage","modalOpen","App","path","component","exact","configureStore","reducer","editorToolsReducer","colorPickerReducer","framesReducer","authReducer","middleware","getDefaultMiddleware","immutableCheck","serializableCheck","Boolean","window","hostname","match","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0151dc1d.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {isLoggedIn: false}\r\n\r\nconst authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState,\r\n    reducers: {\r\n        changeAuth: (state, action) => {\r\n            state.isLoggedIn = action.payload\r\n        },\r\n    },\r\n})\r\n\r\nexport const { changeAuth } = authSlice.actions\r\nexport default authSlice.reducer\r\n\r\nexport const selectAuth = state => state.auth.isLoggedIn","import { Link } from 'react-router-dom'\r\nimport { Menu } from 'antd'\r\nimport Button from 'antd/es/button'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { selectAuth, changeAuth } from 'state-slices/authSlice'\r\nimport { useEffect } from 'react'\r\n\r\nconst Navbar = (props) => {\r\n    const dispatch = useDispatch()\r\n    const auth = useSelector(selectAuth)\r\n\r\n    const LeftMenu = () => {\r\n        return  (\r\n            <Menu className='nav' selectedKeys={props.currentPage} mode='horizontal'>\r\n                <Menu.Item key='home'>\r\n                    <Link to='/'>\r\n                        Home\r\n                    </Link>\r\n                </Menu.Item>\r\n            </Menu>\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(auth)\r\n    })\r\n\r\n    const RightMenu = () => {\r\n        return(\r\n            <Menu className='nav' mode='horizontal'>\r\n                <Menu.Item key='auth'>\r\n                    {auth && <Button onClick={() => dispatch(changeAuth(false))}>Log Out</Button>}\r\n                    {!auth && <Button onClick={() => dispatch(changeAuth(true))}>Log In</Button>}\r\n                </Menu.Item>\r\n            </Menu>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <nav className='nav'>\r\n            <LeftMenu />\r\n            <RightMenu />\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {color: {r: 0, g: 0, b: 0, a: 1}}\r\n\r\nconst colorPickerSlice = createSlice({\r\n    name: 'colorPicker',\r\n    initialState,\r\n    reducers: {\r\n        changeColor: (state, action) => {\r\n            state.color = action.payload\r\n        },\r\n    },\r\n})\r\n\r\nexport const { changeColor } = colorPickerSlice.actions\r\nexport default colorPickerSlice.reducer\r\n\r\nexport const selectColor = state => state.colorPicker.color","import { useDispatch, useSelector  } from 'react-redux'\r\nimport { SketchPicker } from 'react-color'\r\nimport { changeColor, selectColor } from 'state-slices/colorPickerSlice'\r\n\r\nconst ColorPicker = () => {\r\n    const dispatch = useDispatch()\r\n    const color = useSelector(selectColor)\r\n\r\n    const colorChange = (color) => {\r\n        dispatch(changeColor(color.rgb))\r\n    }\r\n\r\n    return (\r\n        <SketchPicker\r\n            color={color}\r\n            onChange={colorChange}\r\n        />\r\n    )\r\n}\r\n\r\nexport default ColorPicker","import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = { tool: '', drawSize: 1 }\r\n\r\nconst editorToolsSlice = createSlice({\r\n    name: 'editorTools',\r\n    initialState,\r\n    reducers: {\r\n        changeTool: (state, action) => {\r\n            state.tool = action.payload\r\n        },\r\n        changeDrawSize: (state, action) => {\r\n            state.drawSize = action.payload\r\n        }\r\n    },\r\n})\r\n\r\nexport const { changeTool, changeDrawSize } = editorToolsSlice.actions\r\nexport default editorToolsSlice.reducer\r\n\r\nexport const selectEditorTool = state => state.editorTools.tool\r\nexport const selectDrawSize = state => state.editorTools.drawSize","import { createSlice } from '@reduxjs/toolkit'\r\nimport shortId from 'shortid'\r\nconst initialId = shortId.generate()\r\nconst initialState = {currentFrameId: initialId, frames: [{id: initialId, array: []}]}\r\n\r\nconst framesSlice = createSlice({\r\n    name: 'frames',\r\n    initialState,\r\n    reducers: {\r\n        addFrame: (state, action) => {\r\n            state.frames.push({id: action.payload.id, array: action.payload.array})\r\n        },\r\n        removeFrame: (state, action) => {\r\n            let currentIndex = state.frames.findIndex(item => item.id === state.currentFrameId)\r\n            state.frames = state.frames.filter(item => item.id !== action.payload)\r\n            if (currentIndex <= 0) {\r\n                currentIndex = 0\r\n            }\r\n            else {\r\n                currentIndex -= 1\r\n            }\r\n            state.currentFrameId = state.frames[currentIndex].id\r\n        },\r\n        cloneFrame: (state, action) => {\r\n            let index = state.frames.findIndex(item => item.id === action.payload.originalId) \r\n            state.frames.splice(index, 0, {id: action.payload.newId, array: action.payload.array})\r\n        },\r\n        updateFrame: (state, action) => {\r\n            state.frames.find(item => item.id === action.payload.id).array = action.payload.array\r\n        },\r\n        changeCurrentFrameId: (state, action) => {\r\n            state.currentFrameId = action.payload\r\n        },\r\n        updateAllFrames: (state, action) => {\r\n            state.frames = action.payload\r\n        }\r\n    },\r\n})\r\n\r\nexport const { addFrame, removeFrame, updateFrame, cloneFrame, changeCurrentFrameId, updateAllFrames } = framesSlice.actions\r\nexport default framesSlice.reducer\r\n\r\nexport const selectFrames = state => state.frames.frames\r\nexport const selectCurrentFrameId = state => state.frames.currentFrameId","import Sketch from 'react-p5'\r\nimport { useEffect, useRef} from 'react'\r\nimport { useSelector, useDispatch} from 'react-redux'\r\nimport { selectDrawSize, selectEditorTool } from 'state-slices/editorToolsSlice'\r\nimport { selectColor, changeColor } from 'state-slices/colorPickerSlice'\r\nimport { selectFrames, selectCurrentFrameId, updateFrame } from 'state-slices/framesSlice'\r\n\r\nconst EditorGrid = (props) => {\r\n    const mapTool = useSelector(selectEditorTool)\r\n    const drawSize = useSelector(selectDrawSize)\r\n    const color = useSelector(selectColor)\r\n    const framesArray = useSelector(selectFrames)\r\n    const currentFrameId = useSelector(selectCurrentFrameId)\r\n    const gridArray = useRef([])\r\n    const dispatch = useDispatch()\r\n\r\n    let width = props.width\r\n    let height = props.height\r\n    let scale = 640 / width\r\n    let gridWidth = width * scale\r\n\r\n\r\n    // useEffect(() => {\r\n    //     if(framesArray[0].array.length === [].length){\r\n    //         gridArray.current = new Array(width * height).fill({r: 0, g: 0, b: 0, a: 0})\r\n    //         console.log(gridArray.current)\r\n    //         updateFrameState(currentFrameId)\r\n    //     }\r\n    // })\r\n    \r\n    useEffect(() => {\r\n        if(framesArray.find(item => item.id === currentFrameId)){\r\n            gridArray.current = framesArray.find(array => array.id === currentFrameId).array.slice()\r\n        }\r\n           \r\n    }, [currentFrameId])\r\n\r\n\r\n    const updateFrameState = (id) => {\r\n        let tempArray = gridArray.current.slice()\r\n        dispatch(updateFrame({id: id, array: tempArray}))\r\n    }\r\n\r\n    const mouseGridCoords = (p5) => {\r\n        if (p5.mouseX > (gridWidth) || p5.mouseY < 0 || p5.mouseY > (gridWidth) || p5.mouseX < 0)\r\n            return null\r\n        let gridX = Math.floor(p5.mouseX / scale)\r\n        let gridY = Math.floor(p5.mouseY / scale)\r\n        return [gridX, gridY]\r\n    }\r\n\r\n    const toolUse = (p5) => {\r\n        p5.noLoop()\r\n        let coords = mouseGridCoords(p5)\r\n        if (!coords){\r\n            p5.loop()\r\n            return false\r\n        }\r\n        let gridX = coords[0]\r\n        let gridY = coords[1]\r\n\r\n        switch(mapTool) {\r\n            case 'erase':\r\n                toolHelper(gridX, gridY, {r: 0, g: 0, b: 0, a: 0}, false, p5)\r\n                break\r\n\r\n            case 'draw':\r\n                toolHelper(gridX, gridY, color, false, p5)\r\n                break\r\n\r\n            case 'pick':\r\n                let index = (gridY * width) + gridX\r\n                if(gridArray.current[index]['a'] !== 0){\r\n                    let tempColor = gridArray.current[index]\r\n                    dispatch(changeColor(tempColor))\r\n                }\r\n                break\r\n\r\n            case 'mirror':\r\n                toolHelper(gridX, gridY, color, true, p5)\r\n                break\r\n            default:\r\n                p5.loop()\r\n                return false\r\n        }\r\n        p5.loop()\r\n        return false\r\n    }\r\n\r\n    const toolHelper = (gridX, gridY, color, mirror, p5) => {\r\n        let different = false\r\n        for (let x = -Math.floor(drawSize / 2); x < Math.ceil(drawSize / 2); x++){\r\n            for (let y = -Math.floor(drawSize / 2); y < Math.ceil(drawSize / 2); y++) {\r\n                let yCalc = (gridY * width) + (width * y)\r\n                let index = yCalc + (gridX + x)\r\n                if (index >= Math.floor(yCalc) && index < (Math.floor(yCalc) + width) && index < gridArray.current.length){\r\n                    if (!colorEqual(gridArray.current[index], color)){\r\n                        p5.redraw()\r\n                        gridArray.current[index] = color\r\n                        different = true\r\n                    }\r\n                }\r\n                if (mirror){\r\n                    let mirrorIndex = yCalc + ((width / 2) + ((width / 2) - (gridX + x))) - 1\r\n                    if (mirrorIndex >= Math.floor(yCalc) && mirrorIndex < (Math.floor(yCalc) + width) && index < gridArray.current.length){\r\n                        if (!colorEqual(gridArray.current[mirrorIndex], color)){\r\n                            gridArray.current[mirrorIndex] = color\r\n                            different = true\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (different)\r\n            updateFrameState(currentFrameId)\r\n    }\r\n\r\n    const colorEqual = (c1, c2) => {\r\n        if (!c1 || !c2)\r\n            return false\r\n        if (c1['a'] === c2['a'] && c1['b'] === c2['b'] && c1['g'] === c2['g'] && c1['b'] === c2['b'])\r\n            return true\r\n        return false\r\n    }\r\n\r\n    const setup = (p5, canvasParentRef) => {\r\n        p5.noStroke()\r\n        p5.colorMode('RGB', 255, 255, 255, 1)\r\n        p5.createCanvas(gridWidth, gridWidth).parent(canvasParentRef)\r\n        gridArray.current = new Array(width * height).fill({r: 0, g: 0, b: 0, a: 0})\r\n        updateFrameState(currentFrameId)\r\n \r\n    }\r\n\r\n    const draw = (p5) => {\r\n        p5.scale(scale)\r\n        p5.erase()\r\n        p5.rect(0, 0, width, height)\r\n        p5.noErase()\r\n        p5.fill('rgba(0, 0, 0, 0.3)')\r\n\r\n        if (gridArray.current.length !== (width * height))\r\n            return\r\n\r\n        let coords = mouseGridCoords(p5)\r\n        if (coords && mapTool !== 'pick'){\r\n            let gridX = coords[0]\r\n            let gridY = coords[1]\r\n            let previewShadowX = (gridX - Math.floor(drawSize / 2))\r\n            let previewShadowY = (gridY - Math.floor(drawSize / 2))\r\n            p5.rect(previewShadowX, previewShadowY, drawSize, drawSize)\r\n        }\r\n            \r\n        for(let x = 0; x < height; x++){\r\n            for(let y = 0; y < width; y++){\r\n                if(gridArray.current[y * width + x] !== 0){\r\n                    let color = gridArray.current[y * width + x]\r\n                    p5.fill(`rgba(${color['r']}, ${color['g']}, ${color['b']}, ${color['a']})`)\r\n                    p5.rect(x, y, 1, 1)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    const mouseMoved = () => {\r\n        return false\r\n    }\r\n\r\n    return (\r\n        <Sketch setup={setup} draw={draw} mouseClicked={toolUse} mouseDragged={toolUse} mouseMoved={mouseMoved}/>\r\n    )\r\n}\r\n\r\nexport default EditorGrid","import { useDispatch } from 'react-redux'\r\nimport { changeDrawSize } from 'state-slices/editorToolsSlice'\r\nimport InputNumber from 'antd/es/input-number'\r\nimport Typography from 'antd/es/typography'\r\nconst { Title } = Typography\r\n\r\nconst DrawSizeChanger = () => {\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const changeSize = (newSize) => {\r\n        dispatch(changeDrawSize(newSize))\r\n    }\r\n\r\n    return (\r\n        <div className='draw-size-box'>\r\n            <Title level={4}>Tool Size</Title>\r\n            <InputNumber min={1} max={8} defaultValue={1} onChange={changeSize}></InputNumber>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DrawSizeChanger","import { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { changeTool } from 'state-slices/editorToolsSlice'\r\nimport Menu from 'antd/es/menu'\r\nimport { BiPencil, BiEraser } from 'react-icons/bi'\r\nimport { IoEyedropSharp } from 'react-icons/io5'\r\nimport { VscMirror } from 'react-icons/vsc'\r\nimport DrawSizeChanger from 'components/pages/editor/DrawSizeChanger'\r\n\r\nconst EditorTools = () => {\r\n    const [currentTool, setCurrentTool] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    const handleClick = e => {\r\n        dispatch(changeTool(e.key))\r\n        setCurrentTool(e.key)\r\n    }\r\n\r\n    return (\r\n        <Menu onClick={handleClick} selectedKeys={currentTool} mode='horizontal'>\r\n            <Menu.Item className='menu-tool-container' key='draw'>\r\n                <BiPencil size='lg' className='menu-tool-icon' />\r\n            </Menu.Item>\r\n            <Menu.Item className='menu-tool-container' key='erase'>\r\n                <BiEraser size='lg' className='menu-tool-icon' />\r\n            </Menu.Item>\r\n            <Menu.Item className='menu-tool-container' key='pick'>\r\n                <IoEyedropSharp size='lg' className='menu-tool-icon' />\r\n            </Menu.Item>\r\n            <Menu.Item className='menu-tool-container' key='mirror'>\r\n                <VscMirror size='lg' className='menu-tool-icon' />\r\n            </Menu.Item>\r\n            <Menu.SubMenu>\r\n                <DrawSizeChanger />\r\n            </Menu.SubMenu>\r\n        </Menu>\r\n    )\r\n}\r\n\r\nexport default EditorTools","import { useRef, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { selectFrames } from 'state-slices/framesSlice'\r\nimport Sketch from 'react-p5'\r\nimport Button from 'antd/es/button'\r\nimport InputNumber from 'antd/es/input-number'\r\nimport { AiFillPauseCircle, AiFillPlayCircle } from 'react-icons/ai'\r\n\r\nconst PreviewLoop = (props) => {\r\n    const framesArray = useSelector(selectFrames)\r\n    const frameIndex = useRef(0)\r\n    const [p5Object, setP5Object] = useState()\r\n    const [pauseTitle, setPauseTitle] = useState('Play')\r\n\r\n    let width = props.width\r\n    let height = props.height\r\n    let scale = 128 / width\r\n\r\n    const setup = (p5, canvasParentRef) => {\r\n        setP5Object(p5)\r\n        p5.noStroke()\r\n        p5.colorMode('RGB', 255, 255, 255, 1)\r\n        p5.createCanvas(width * scale, height * scale).parent(canvasParentRef)\r\n        p5.frameRate(8)\r\n        p5.noLoop()\r\n    }\r\n\r\n    const incrementIndex = () => {\r\n        if (frameIndex.current >= framesArray.length - 1)\r\n            frameIndex.current = 0\r\n        else\r\n            frameIndex.current++\r\n    }\r\n\r\n    const draw = (p5) => {\r\n        p5.scale(scale)\r\n        p5.erase()\r\n        p5.rect(0, 0, width, height)\r\n        p5.noErase()\r\n        if (framesArray.length === 0 || !framesArray[frameIndex.current]){\r\n            incrementIndex()\r\n            return\r\n        }\r\n        let currentFrame = framesArray[frameIndex.current].array\r\n        if (!currentFrame || currentFrame.length !== (height * width)) {\r\n            incrementIndex()\r\n            return\r\n        }\r\n        for(let x = 0; x < height; x++){\r\n            for(let y = 0; y < width; y++){\r\n                if(currentFrame[y * width + x] !== 0){\r\n                    let color = currentFrame[y * width + x]\r\n                    p5.fill(`rgba(${color['r']}, ${color['g']}, ${color['b']}, ${color['a']})`)\r\n                    p5.rect(x, y, 1, 1)\r\n                }\r\n            }\r\n        }\r\n        incrementIndex()\r\n    }\r\n\r\n    const pauseButton = () => {\r\n        if (p5Object.isLooping()) {\r\n            p5Object.noLoop()\r\n            setPauseTitle('Play')\r\n        }\r\n\r\n        else {\r\n            p5Object.loop()\r\n            setPauseTitle('Pause')\r\n        }\r\n    }\r\n\r\n    const changeFrameRate = (newRate) => {\r\n        if (newRate > 60)\r\n            newRate = 60\r\n        else if (newRate < 1)\r\n            newRate = 1\r\n        p5Object.frameRate(newRate)\r\n    }\r\n\r\n    const haltLoop = () => {\r\n        if (pauseTitle === 'Play') {\r\n            return\r\n        }\r\n        if (p5Object.isLooping()) {\r\n            p5Object.noLoop()\r\n        }\r\n        else {\r\n            p5Object.loop()\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>Preview</h3>\r\n            <div className='vertical-flex frame-box' style={{width: width * scale, height: height * scale}} >\r\n                <Sketch \r\n                    className='sketch' \r\n                    setup={setup} \r\n                    draw={draw} \r\n                    mousePressed={haltLoop} \r\n                    mouseReleased={haltLoop}\r\n                />\r\n                <Button className='frame-btn visible btm-left-btn' onClick={pauseButton}>\r\n                    {pauseTitle === 'Play' ? <AiFillPlayCircle /> : <AiFillPauseCircle /> }\r\n                </Button>\r\n            </div>\r\n            <InputNumber \r\n                min={1} \r\n                max={60} \r\n                defaultValue={8} \r\n                onChange={changeFrameRate} \r\n                formatter={value => `fps: ${value}`}\r\n                parser={value => value.replace('fps: ', '')}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PreviewLoop","import { useRef, useEffect } from 'react'\r\nimport { useDispatch, useSelector} from 'react-redux'\r\nimport { changeCurrentFrameId, selectFrames, selectCurrentFrameId, removeFrame, cloneFrame} from 'state-slices/framesSlice'\r\nimport Button from 'antd/es/button'\r\nimport Sketch from 'react-p5'\r\nimport shortId from 'shortid'\r\nimport { IoCopy } from 'react-icons/io5'\r\nimport { AiFillDelete } from 'react-icons/ai'\r\n\r\n\r\nconst Frame = (props) => {\r\n    const dispatch = useDispatch()\r\n    const currentFrameId = useSelector(selectCurrentFrameId)\r\n    const framesArray = useSelector(selectFrames)\r\n    const frameRef = useRef()\r\n\r\n    let width = props.width\r\n    let height = props.height\r\n    let scale = 128 / width\r\n\r\n    useEffect(() => {\r\n        if(props.id === currentFrameId){\r\n            let node = frameRef.current\r\n            node.classList.add('current-frame')\r\n            return () => {\r\n                node.classList.remove('current-frame')\r\n            }\r\n        }\r\n    }, [currentFrameId, props.id])\r\n    \r\n    const dupeFrame = (originalId, array) => {\r\n        const newId = shortId.generate()\r\n        dispatch(cloneFrame(\r\n            {\r\n                originalId: originalId,\r\n                newId: newId,\r\n                array: array,\r\n            }\r\n        ))\r\n    }\r\n\r\n    const setup = (p5, canvasParentRef) => {\r\n        p5.noLoop()\r\n        p5.noStroke()\r\n        p5.colorMode('RGB', 255, 255, 255, 1)\r\n        p5.createCanvas(width * scale, height * scale).parent(canvasParentRef)\r\n    }\r\n\r\n    const draw = (p5, frame) => {\r\n        p5.scale(scale)\r\n        if (!frame || frame.length !== (width * height))\r\n            return\r\n        p5.erase()\r\n        p5.rect(0, 0, width, height)\r\n        p5.noErase()\r\n        for(let x = 0; x < height; x++){\r\n            for(let y = 0; y < width; y++){\r\n                if(frame[y * width + x] !== 0){\r\n                    let color = frame[y * width + x]\r\n                    p5.fill(`rgba(${color['r']}, ${color['g']}, ${color['b']}, ${color['a']})`)\r\n                    p5.rect(x, y, 1, 1)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const mouseClicked = (p5, id) => {\r\n        if (id === currentFrameId) {\r\n            p5.redraw()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div \r\n            className='vertical-flex frame-box' \r\n            id={props.id} \r\n            ref={frameRef} \r\n            style={{width: (width * scale) + 5, height: (height * scale) + 5}} \r\n        >\r\n            <span className='frame-index'>{props.index}</span>\r\n            <div onClick={() => dispatch(changeCurrentFrameId(props.id))}>\r\n                <Sketch \r\n                    className='sketch' \r\n                    style={{width: (width * scale), height: (height * scale)}} \r\n                    setup={setup} \r\n                    draw={(p5) => {draw(p5, props.array, props.index)}} \r\n                    mouseClicked={(p5) => {mouseClicked(p5, props.id)}} \r\n                />\r\n                {framesArray.length > 1 && \r\n                    <Button className={'frame-btn btm-left-btn'} onClick={() => dispatch(removeFrame(props.id))}>\r\n                        <AiFillDelete/>\r\n                    </Button>\r\n                }\r\n                <Button className={'frame-btn btm-right-btn'} onClick={() => dupeFrame(props.id, props.array)}>\r\n                    <IoCopy/>\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Frame","import { useDispatch, useSelector} from 'react-redux'\r\nimport { changeCurrentFrameId, selectFrames, addFrame, updateAllFrames } from 'state-slices/framesSlice'\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\r\nimport Button from 'antd/es/button'\r\nimport shortId from 'shortid'\r\nimport LazyLoad from 'react-lazyload'\r\nimport Frame from 'components/pages/editor/Frame'\r\n\r\nconst Frames = (props) => {\r\n    const dispatch = useDispatch()\r\n    const framesArray = useSelector(selectFrames)\r\n\r\n    let width = props.width\r\n    let height = props.height\r\n\r\n    const newFrame = () => {\r\n        const id = shortId.generate()\r\n        dispatch(addFrame(\r\n            {\r\n                id: id, \r\n                array: Array(width * height).fill({r: 0, g: 0, b: 0, a: 0})\r\n            }\r\n        ))\r\n        dispatch(changeCurrentFrameId(id))\r\n    }\r\n\r\n\r\n    const onDragEnd = (result) => {\r\n        if (!result.destination) {\r\n            return\r\n        }\r\n        const tempArray = framesArray.slice()\r\n        const [removed] = tempArray.splice(result.source.index, 1)\r\n        tempArray.splice(result.destination.index, 0, removed)\r\n        dispatch(updateAllFrames(tempArray))\r\n    }\r\n\r\n    return (\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n            <Droppable droppableId=\"droppable\" >\r\n                {(provided) => {\r\n                    return (\r\n                        <div \r\n                            ref={provided.innerRef} \r\n                            {...provided.droppableProps}\r\n                        >\r\n                            {framesArray.map((frame, index) => {\r\n                                return (\r\n                                    <LazyLoad \r\n                                        height={200} \r\n                                        once={true} \r\n                                        overflow={true} \r\n                                        key={frame.id} \r\n                                    >\r\n                                        <Draggable \r\n                                            draggableId={frame.id} \r\n                                            index={index} \r\n                                            className='frame-preview vertical-flex'\r\n                                        >\r\n                                            {(provided) => {\r\n                                                return (\r\n                                                    <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\r\n                                                        <Frame \r\n                                                            index={index} \r\n                                                            id={frame.id} \r\n                                                            array={frame.array} \r\n                                                            height={height} \r\n                                                            width={width}\r\n                                                            scale={props.scale}\r\n                                                        />\r\n                                                        {provided.placeholder}\r\n                                                    </div>\r\n                                            )}}\r\n                                        </Draggable>\r\n                                    </LazyLoad>\r\n                                )\r\n                            })}\r\n                            {provided.placeholder}\r\n                        </div>\r\n                )}}\r\n            </Droppable>\r\n            <Button onClick={newFrame}>\r\n                Add Frame\r\n            </Button>\r\n        </DragDropContext>\r\n    )\r\n}\r\nexport default Frames","import { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux' \r\nimport { useBeforeunload } from 'react-beforeunload'\r\nimport { Prompt } from 'react-router'\r\nimport Layout from 'antd/es/layout'\r\nimport Typography from 'antd/es/typography'\r\nimport Navbar from 'components/Navbar'\r\nimport ColorPicker from 'components/pages/editor/ColorPicker'\r\nimport EditorGrid from 'components/pages/editor/EditorGrid'\r\nimport EditorTools from 'components/pages/editor/EditorTools'\r\nimport PreviewLoop from 'components/pages/editor/PreviewLoop'\r\nimport Frames from 'components/pages/editor/Frames'\r\nimport DrawSizeChanger from 'components/pages/editor/DrawSizeChanger'\r\nimport { selectAuth } from 'state-slices/authSlice'\r\n\r\n\r\nconst { Title } = Typography \r\nconst { Header, Footer, Sider, Content } = Layout\r\n\r\nconst EditorPage = (props) => {\r\n    const auth = useSelector(selectAuth)\r\n\r\n    useEffect(() => {\r\n        if(!auth) {\r\n            props.history.push('/')\r\n        }\r\n    })\r\n\r\n    useBeforeunload((event) => event.preventDefault())\r\n\r\n    return (\r\n        <>\r\n        <Prompt\r\n            when={true}\r\n            message='You have unsaved changes, are you sure you want to leave?'\r\n        />\r\n        <Layout style={{ height: '100vh' }}>\r\n            <Header>\r\n                <Navbar currentPage={'editor'} />\r\n            </Header>\r\n            <Layout>\r\n                <Sider width={250} >\r\n                    <ColorPicker />\r\n                    <PreviewLoop \r\n                        height={props.location.state.width}\r\n                        width={props.location.state.width}\r\n                    />\r\n                    <DrawSizeChanger />\r\n                </Sider>\r\n                <Layout>\r\n                    <Content className='main-content' >\r\n                        <EditorTools />\r\n                        <EditorGrid \r\n                            height={props.location.state.width}\r\n                            width={props.location.state.width}\r\n                            name={props.location.state.name}\r\n                        />\r\n                    </Content>\r\n                </Layout>\r\n                <Sider width={250}>\r\n                    <Title level={4} style={{marginTop: '15px'}}>\r\n                        Frame Sequence\r\n                    </Title>\r\n                    <Frames \r\n                        height={props.location.state.width}\r\n                        width={props.location.state.width}\r\n                    />\r\n                </Sider>\r\n            </Layout>\r\n            <Footer></Footer>\r\n        </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditorPage","import { useHistory } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { selectCurrentFrameId, updateFrame } from 'state-slices/framesSlice'\r\nimport Button from \"antd/es/button\"\r\nimport InputNumber from 'antd/es/input-number'\r\nimport { Form, Input, } from 'antd'\r\n\r\n\r\nconst NewSpriteModal = (props) => {\r\n    const history = useHistory()\r\n    const [form] = Form.useForm()\r\n    const currentFrameId = useSelector(selectCurrentFrameId)\r\n    const dispatch = useDispatch()\r\n\r\n    const openNewSprite = () => {\r\n        let width = form.getFieldValue('width')\r\n        let name = form.getFieldValue('name')\r\n        let state = {\r\n            name: name,\r\n            width: width,\r\n        }\r\n        let gridArray = new Array(width * width).fill({r: 0, g: 0, b: 0, a: 0})\r\n        dispatch(updateFrame({id: currentFrameId, array: gridArray}))\r\n        history.push('/editor', state)\r\n    }\r\n\r\n    return (\r\n        <div className='modal-box'>\r\n            <Form\r\n                layout='horizontal'\r\n                form={form}\r\n            >\r\n                <Form.Item label='Name' name='name' initialValue='untitledSprite'>\r\n                    <Input placeholder='Mario'/>\r\n                </Form.Item>\r\n                <Form.Item label='Dimensions' name='width' initialValue={32}>\r\n                    <InputNumber min={8} max={64} step={8} />\r\n                </Form.Item>\r\n                <Form.Item >\r\n                    <Button type=\"primary\" onClick={openNewSprite}>Create Sprite</Button>\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button onClick={() => {props.setModalOpen(false)}}>Close Modal</Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\nexport default NewSpriteModal","import { useState } from 'react'\r\nimport Button from 'antd/es/button'\r\nimport Layout from 'antd/es/layout'\r\nimport Navbar from 'components/Navbar'\r\nimport NewSpriteModal from 'components/pages/home/NewSpriteModal'\r\n\r\nconst { Header, Footer, Sider, Content } = Layout\r\n\r\nconst HomePage = () => {\r\n    const [modalOpen, setModalOpen] = useState(false)\r\n\r\n    return (\r\n        <Layout style={{ height: '100vh' }}>\r\n            {modalOpen ? <NewSpriteModal setModalOpen={setModalOpen} /> : null}\r\n            <Header>\r\n                <Navbar currentPage={'home'}/>\r\n            </Header>\r\n            <Layout>\r\n                <Sider width={250} >\r\n                </Sider>\r\n                <Layout>\r\n                    <Content className='main-content' >\r\n                        <Button onClick={() => setModalOpen(true)}>New Sprite</Button>\r\n                    </Content>\r\n                </Layout>\r\n                <Sider width={250}>\r\n                </Sider>\r\n            </Layout>\r\n            <Footer></Footer>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default HomePage","import React from 'react'\r\nimport EditorPage from './components/pages/editor/EditorPage'\r\nimport { Switch, Route } from \"react-router-dom\"\r\nimport 'antd/dist/antd.css'\r\nimport './App.css'\r\nimport HomePage from './components/pages/home/HomePage'\r\n\r\nfunction App() {\r\n  return (\r\n    <Switch>\r\n      <Route path='/' component={HomePage} exact />\r\n      <Route path='/editor' component={EditorPage} />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default App;\r\n  ","import { configureStore } from '@reduxjs/toolkit'\r\nimport editorToolsReducer from 'state-slices/editorToolsSlice'\r\nimport colorPickerReducer from 'state-slices/colorPickerSlice'\r\nimport framesReducer from 'state-slices/framesSlice'\r\nimport authReducer from 'state-slices/authSlice'\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    editorTools: editorToolsReducer,\r\n    colorPicker: colorPickerReducer,\r\n    frames: framesReducer,\r\n    auth: authReducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      immutableCheck: false,\r\n      serializableCheck: false,\r\n    }),\r\n})","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}